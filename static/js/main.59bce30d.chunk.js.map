{"version":3,"sources":["constants/actionTypes.js","constants/index.js","reducers/index.js","store/index.js","components/BalanceInfo.js","components/IncomeListItem.js","actions/index.js","utils/sort.js","components/IncomeList.js","components/ExpenseListItem.js","components/ExpenseList.js","App.js","index.js"],"names":["ADD_INCOME","EDIT_INCOME","CHANGE_IS_INCLUDED","CHANGE_IS_ALTERNATIVE","REMOVE_INCOME","ADD_EXPENSE","EDIT_EXPENSE","REMOVE_EXPENSE","UPDATE_INITIAL_ACCOUNT_BALANCE","UPDATE_CURRENT_ACCOUNT_BALANCE","INCOME","initialState","initialAccountBalance","currentAccountBalance","incomeData","expenseData","calculateTotalIncome","array","total","forEach","item","isIncluded","isAlternativeSelected","altAmount","amount","calculateTotalExpense","calculateCurrentBalance","initialBalance","income","outcome","reducer","state","action","type","concat","payload","filter","id","expense","data","inclIdx","findIndex","newInclArray","value","outcomeData","altIdx","newAltArray","store","createStore","rootReducer","BalanceInfo","title","className","Title","level","Text","IncomeListItem","onIncludeChange","onSelectedAmountClick","description","date","isAlternativePossible","size","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChange","onClick","changeInclude","dateFormat","sortByDate","ascending","sort","a","b","moment","toDate","connect","dispatch","changeSelectedAmount","itemLayout","dataSource","renderItem","ExpenseListItem","strong","updateInitialAccountBalance","ghost","span","toFixed","offset","shape","icon","DollarCircleOutlined","Modal","confirm","content","defaultValue","max","Root","ReactDOM","render","document","getElementById"],"mappings":"yNAAaA,EAAa,aACbC,EAAc,cACdC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAgB,gBAChBC,EAAc,cACdC,EAAe,eACfC,EAAiB,iBACjBC,EAAiC,+BACjCC,EAAiC,iCCTjCC,EAAS,SCchBC,EAAe,CACnBC,sBAAuB,EACvBC,sBAAuB,EACvBC,WAAY,GACZC,YAAa,IAGf,SAASC,EAAqBC,GAC5B,IAAIC,EAAQ,EAMZ,OALAD,EAAME,SAAQ,SAACC,GACTA,EAAKC,aACPH,GAASE,EAAKE,sBAAwBF,EAAKG,UAAYH,EAAKI,WAGzDN,EAGT,SAASO,EAAsBR,GAC7B,IAAIC,EAAQ,EAIZ,OAHAD,EAAME,SAAQ,SAACC,GACbF,GAASE,EAAKC,WAAaD,EAAKI,OAAS,KAEpCN,EAGT,SAASQ,EAAwBC,EAAgBC,EAAQC,GACvD,OAAOF,EAAiBC,EAASC,EAwGpBC,MArGf,WAAgD,IAA/BC,EAA8B,uDAAtBpB,EAAcqB,EAAQ,uCAC7C,OAAQA,EAAOC,MACb,KAAKjC,EAKL,KAAKC,EACH,OAAO,2BACF8B,GADL,IAEEjB,WAAYiB,EAAMjB,WAAWoB,OAAOF,EAAOG,WAE/C,KAAK/B,EACH,OAAO,2BACF2B,GADL,IAEEjB,WAAYiB,EAAMjB,WAAWsB,QAC3B,SAACR,GAAD,OAAYA,EAAOS,KAAOL,EAAOG,aAGvC,KAAK9B,EAKL,KAAKC,EACH,OAAO,2BACFyB,GADL,IAEEhB,YAAagB,EAAMhB,YAAYmB,OAAOF,EAAOG,WAEjD,KAAK5B,EACH,OAAO,2BACFwB,GADL,IAEEhB,YAAagB,EAAMhB,YAAYqB,QAC7B,SAACE,GAAD,OAAaA,EAAQD,KAAOL,EAAOG,aAGzC,KAAKjC,EACH,IAAMqC,EACJP,EAAOG,QAAQF,OAASvB,EAASqB,EAAMjB,WAAaiB,EAAMhB,YACtDyB,EAAUD,EAAKE,WAAU,SAACrB,GAAD,OAAUA,EAAKiB,KAAOL,EAAOG,QAAQE,MAC9DK,EAAY,YAAOH,GAEzB,OADAG,EAAaF,GAASnB,WAAaW,EAAOG,QAAQQ,MAC9CX,EAAOG,QAAQF,OAASvB,EACnB,2BACFqB,GADL,IAEEjB,WAAY4B,EACZ7B,sBAAuBa,EACrBK,EAAMnB,sBACNI,EAAqB0B,GACrBjB,EAAsBM,EAAMhB,gBAI3B,2BACFgB,GADL,IAEEa,YAAaF,EACb7B,sBAAuBa,EACrBK,EAAMnB,sBACNI,EAAqBe,EAAMjB,YAC3BW,EAAsBiB,MAG5B,KAAKvC,EACH,IAAM0C,EAASd,EAAMjB,WAAW2B,WAC9B,SAACrB,GAAD,OAAUA,EAAKiB,KAAOL,EAAOG,QAAQE,MAEjCS,EAAW,YAAOf,EAAMjB,YAE9B,OADAgC,EAAYD,GAAQvB,sBAAiD,IAAzBU,EAAOG,QAAQQ,MACpD,2BACFZ,GADL,IAEEjB,WAAYgC,EACZjC,sBAAuBa,EACrBK,EAAMnB,sBACNI,EAAqB8B,GACrBrB,EAAsBM,EAAMhB,gBAGlC,KAAKP,EACH,OAAO,2BACFuB,GADL,IAEEnB,sBAAuBoB,EAAOG,QAC9BtB,sBAAuBa,EACrBM,EAAOG,QACPnB,EAAqBe,EAAMjB,YAC3BW,EAAsBM,EAAMhB,gBAGlC,KAAKN,EACH,OAAO,2BACFsB,GADL,IAEElB,sBAAuBa,EACrBK,EAAMlB,sBACNG,EAAqBe,EAAMjB,YAC3BW,EAAsBM,EAAMhB,gBAGlC,QACE,OAAOgB,ICvIEgB,EAFDC,YAAYC,G,qECAX,SAASC,EAAT,GAAwC,IAAjBP,EAAgB,EAAhBA,MAAOQ,EAAS,EAATA,MAC3C,OACE,sBAAKC,UAAU,yBAAf,UACE,eAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAzB,UAA6BX,EAA7B,cACA,cAAC,IAAWY,KAAZ,CAAiBH,UAAU,2BAA2BnB,KAAK,YAA3D,SACGkB,O,iDCJM,SAASK,EAAT,GAIX,IAHFjB,EAGC,EAHDA,KACAkB,EAEC,EAFDA,gBACAC,EACC,EADDA,sBAGErB,EAQEE,EARFF,GACAsB,EAOEpB,EAPFoB,YACAC,EAMErB,EANFqB,KACApC,EAKEe,EALFf,OACAH,EAIEkB,EAJFlB,WACAE,EAGEgB,EAHFhB,UACAsC,EAEEtB,EAFFsB,sBACAvC,EACEiB,EADFjB,sBAGF,OACE,sBAAK8B,UAAU,OAAf,UACE,cAAC,IAAD,CACEU,KAAK,QACLC,gBAAiB,cAACC,EAAA,EAAD,IACjBC,kBAAmB,cAACC,EAAA,EAAD,IACnBC,eAAgB9C,EAChB+C,SAAU,SAACzB,GAAD,OAAWc,EAAgBpB,EAAIM,MAE3C,sBAAKS,UAAU,wBAAf,UACE,cAAC,IAAWG,KAAZ,CAAiBH,UAAU,mBAA3B,SACGO,IAEH,cAAC,IAAWJ,KAAZ,CAAiBH,UAAU,YAAYnB,KAAK,YAA5C,SACG2B,OAGL,sBAAKR,UAAU,mBAAf,UACE,eAAC,IAAWG,KAAZ,CACEH,UAAS,UACN9B,EAEG,yBADA,uBAFG,0BAMT+C,QAAS,kBAAMX,EAAsBrB,EAAI,IAP3C,UASGb,EATH,cAWCqC,GACC,eAAC,IAAWN,KAAZ,CACEH,UAAS,UACP9B,EACI,uBACA,yBAHG,0BAMT+C,QAAS,kBAAMX,EAAsBrB,EAAI,IAP3C,UASGd,EATH,oBC7BH,SAAS+C,EAAcnC,GAC5B,MAAO,CAAEF,KAAM/B,EAAoBiC,W,sBCpB/BoC,EAAa,aAEZ,SAASC,EAAWvD,GAA0B,IAAnBwD,IAAkB,yDAClD,OAAOxD,EAAMyD,MAAK,SAACC,EAAGC,GACpB,OACEC,IAAOJ,EAAYE,EAAEf,KAAOgB,EAAEhB,KAAMW,GAAYO,SAChDD,IAAOJ,EAAYG,EAAEhB,KAAOe,EAAEf,KAAMW,GAAYO,YCAtD,IAsCeC,eAfS,SAAChD,GACvB,MAAO,CACLQ,KAAMR,EAAMjB,eAIW,SAACkE,GAC1B,MAAO,CACLV,cAAe,SAACjC,EAAIM,GAAL,OACbqC,EAASV,EAAc,CAAEjC,KAAIM,QAAOV,KAAMvB,MAC5CuE,qBAAsB,SAAC5C,EAAIM,GAAL,OACpBqC,EFhBG,CAAE/C,KAAM9B,EAAuBgC,QEgBJ,CAAEE,KAAIM,eAI3BoC,EAtCI,SAAC,GAAmD,IAAjDxC,EAAgD,EAAhDA,KAAM+B,EAA0C,EAA1CA,cAAeW,EAA2B,EAA3BA,qBASzC,OACE,sBAAK7B,UAAU,sBAAf,UACE,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAzB,4BACA,cAAC,IAAD,UACE,cAAC,IAAD,CACE4B,WAAW,aACXC,WAAYX,EAAWjC,GAAM,GAC7B6C,WAfW,SAAChE,GAAD,OACjB,cAACoC,EAAD,CACEjB,KAAMnB,EACNqC,gBAAiBa,EACjBZ,sBAAuBuB,eCTd,SAASI,EAAT,GAAqD,IAA1B9C,EAAyB,EAAzBA,KAAMkB,EAAmB,EAAnBA,gBACtCpB,EAA8CE,EAA9CF,GAAIsB,EAA0CpB,EAA1CoB,YAAaC,EAA6BrB,EAA7BqB,KAAMpC,EAAuBe,EAAvBf,OAAQH,EAAekB,EAAflB,WAEvC,OACE,sBAAK+B,UAAU,OAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,IAAWG,KAAZ,CAAiBH,UAAU,mBAA3B,SACGO,IAEH,cAAC,IAAWJ,KAAZ,CAAiBH,UAAU,YAAYnB,KAAK,YAA5C,SACG2B,OAGL,sBAAKR,UAAU,mBAAf,UACE,eAAC,IAAWG,KAAZ,CAAiB+B,QAAM,EAAvB,UAAyB9D,EAAzB,cACA,cAAC,IAAD,CACE4B,UAAU,iBACVU,KAAK,QACLC,gBAAiB,cAACC,EAAA,EAAD,IACjBC,kBAAmB,cAACC,EAAA,EAAD,IACnBC,eAAgB9C,EAChB+C,SAAU,SAACzB,GAAD,OAAWc,EAAgBpB,EAAIM,YCjBnD,IAgCeoC,eAbS,SAAChD,GACvB,MAAO,CACLQ,KAAMR,EAAMhB,gBAIW,SAACiE,GAC1B,MAAO,CACLV,cAAe,SAACjC,EAAIM,GAAL,OACbqC,EAASV,EAAc,CAAEjC,KAAIM,QAAOV,KTnCnB,iBSuCR8C,EAhCK,SAAC,GAA6B,IAA3BxC,EAA0B,EAA1BA,KAAM+B,EAAoB,EAApBA,cAK3B,OACE,sBAAKlB,UAAU,uBAAf,UACE,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAzB,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACE4B,WAAW,aACXC,WAAYX,EAAWjC,GAAM,GAC7B6C,WAXW,SAAChE,GAAD,OACjB,cAACiE,EAAD,CAAiB9C,KAAMnB,EAAMqC,gBAAiBa,eCyEnCS,eAdS,SAAChD,GACvB,MAAO,CACLnB,sBAAuBmB,EAAMnB,sBAC7BC,sBAAuBkB,EAAMlB,0BAIN,SAACmE,GAC1B,MAAO,CACLO,4BAA6B,SAAC5C,GAAD,OAC3BqC,ELjCG,CAAE/C,KAAMzB,EAAgC2B,QKiCNQ,QAI5BoC,EA1EH,SAAC,GAIN,IAHLnE,EAGI,EAHJA,sBACAC,EAEI,EAFJA,sBACA0E,EACI,EADJA,4BAkBA,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,IAAD,CAAYoC,OAAO,EAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAACvC,EAAD,CACEP,MAAO/B,EAAsB8E,QAAQ,GACrCvC,MAAM,qCAGV,cAAC,IAAD,CAAKsC,KAAM,GAAX,SACE,cAACvC,EAAD,CACEP,MAAO9B,EAAsB6E,QAAQ,GACrCvC,MAAM,iCAGV,cAAC,IAAD,CAAKsC,KAAM,EAAGE,OAAQ,EAAtB,SACE,cAAC,IAAD,CACE7B,KAAK,QACL7B,KAAK,UACL2D,MAAM,SACNC,KAAM,cAACC,EAAA,EAAD,IACNzB,QAtCM,WAChB0B,IAAMC,QAAQ,CACZ7C,MAAO,uCACP0C,KAAM,cAACC,EAAA,EAAD,IACNG,QACE,8BACE,cAAC,IAAD,CACEC,aAActF,EACdwD,SAAU,SAACzB,GAAD,OAAW4C,EAA4B5C,IACjDwD,IAAK,oBAkCX,eAAC,IAAD,WACE,cAAC,IAAD,CAAKV,KAAM,GAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKA,KAAM,GAAX,SACE,cAAC,EAAD,eCrDJW,G,cAAO,kBACX,cAAC,IAAD,CAAUrD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJsD,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.59bce30d.chunk.js","sourcesContent":["export const ADD_INCOME = \"ADD_INCOME\";\nexport const EDIT_INCOME = \"EDIT_INCOME\";\nexport const CHANGE_IS_INCLUDED = \"CHANGE_IS_INCLUDED\";\nexport const CHANGE_IS_ALTERNATIVE = \"CHANGE_IS_ALTERNATIVE\";\nexport const REMOVE_INCOME = \"REMOVE_INCOME\";\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const EDIT_EXPENSE = \"EDIT_EXPENSE\";\nexport const REMOVE_EXPENSE = \"REMOVE_EXPENSE\";\nexport const UPDATE_INITIAL_ACCOUNT_BALANCE = \"EDIT_INITIAL_ACCOUNT_BALANCE\";\nexport const UPDATE_CURRENT_ACCOUNT_BALANCE = \"UPDATE_CURRENT_ACCOUNT_BALANCE\";\n","export const INCOME = \"INCOME\";\nexport const EXPENSE = \"EXPENSE\";\n","import {\n  ADD_INCOME,\n  EDIT_INCOME,\n  CHANGE_IS_INCLUDED,\n  CHANGE_IS_ALTERNATIVE,\n  REMOVE_INCOME,\n  ADD_EXPENSE,\n  EDIT_EXPENSE,\n  REMOVE_EXPENSE,\n  UPDATE_INITIAL_ACCOUNT_BALANCE,\n  UPDATE_CURRENT_ACCOUNT_BALANCE\n} from \"../constants/actionTypes\";\nimport { INCOME } from \"../constants\";\n\nconst initialState = {\n  initialAccountBalance: 0,\n  currentAccountBalance: 0,\n  incomeData: [],\n  expenseData: []\n};\n\nfunction calculateTotalIncome(array) {\n  let total = 0;\n  array.forEach((item) => {\n    if (item.isIncluded) {\n      total += item.isAlternativeSelected ? item.altAmount : item.amount;\n    }\n  });\n  return total;\n}\n\nfunction calculateTotalExpense(array) {\n  let total = 0;\n  array.forEach((item) => {\n    total += item.isIncluded ? item.amount : 0;\n  });\n  return total;\n}\n\nfunction calculateCurrentBalance(initialBalance, income, outcome) {\n  return initialBalance + income - outcome;\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_INCOME:\n      return {\n        ...state,\n        incomeData: state.incomeData.concat(action.payload)\n      };\n    case EDIT_INCOME:\n      return {\n        ...state,\n        incomeData: state.incomeData.concat(action.payload)\n      };\n    case REMOVE_INCOME:\n      return {\n        ...state,\n        incomeData: state.incomeData.filter(\n          (income) => income.id !== action.payload\n        )\n      };\n    case ADD_EXPENSE:\n      return {\n        ...state,\n        expenseData: state.expenseData.concat(action.payload)\n      };\n    case EDIT_EXPENSE:\n      return {\n        ...state,\n        expenseData: state.expenseData.concat(action.payload)\n      };\n    case REMOVE_EXPENSE:\n      return {\n        ...state,\n        expenseData: state.expenseData.filter(\n          (expense) => expense.id !== action.payload\n        )\n      };\n    case CHANGE_IS_INCLUDED:\n      const data =\n        action.payload.type === INCOME ? state.incomeData : state.expenseData;\n      const inclIdx = data.findIndex((item) => item.id === action.payload.id);\n      const newInclArray = [...data];\n      newInclArray[inclIdx].isIncluded = action.payload.value;\n      if (action.payload.type === INCOME) {\n        return {\n          ...state,\n          incomeData: newInclArray,\n          currentAccountBalance: calculateCurrentBalance(\n            state.initialAccountBalance,\n            calculateTotalIncome(newInclArray),\n            calculateTotalExpense(state.expenseData)\n          )\n        };\n      }\n      return {\n        ...state,\n        outcomeData: newInclArray,\n        currentAccountBalance: calculateCurrentBalance(\n          state.initialAccountBalance,\n          calculateTotalIncome(state.incomeData),\n          calculateTotalExpense(newInclArray)\n        )\n      };\n    case CHANGE_IS_ALTERNATIVE:\n      const altIdx = state.incomeData.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      const newAltArray = [...state.incomeData];\n      newAltArray[altIdx].isAlternativeSelected = action.payload.value !== 0;\n      return {\n        ...state,\n        incomeData: newAltArray,\n        currentAccountBalance: calculateCurrentBalance(\n          state.initialAccountBalance,\n          calculateTotalIncome(newAltArray),\n          calculateTotalExpense(state.expenseData)\n        )\n      };\n    case UPDATE_INITIAL_ACCOUNT_BALANCE:\n      return {\n        ...state,\n        initialAccountBalance: action.payload,\n        currentAccountBalance: calculateCurrentBalance(\n          action.payload,\n          calculateTotalIncome(state.incomeData),\n          calculateTotalExpense(state.expenseData)\n        )\n      };\n    case UPDATE_CURRENT_ACCOUNT_BALANCE:\n      return {\n        ...state,\n        currentAccountBalance: calculateCurrentBalance(\n          state.currentAccountBalance,\n          calculateTotalIncome(state.incomeData),\n          calculateTotalExpense(state.expenseData)\n        )\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nexport default function BalanceInfo({ value, title }) {\n  return (\n    <div className=\"balance-info-container\">\n      <Typography.Title level={2}>{value} Kč</Typography.Title>\n      <Typography.Text className=\"balance-info-description\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Typography, Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nexport default function IncomeListItem({\n  data,\n  onIncludeChange,\n  onSelectedAmountClick\n}) {\n  const {\n    id,\n    description,\n    date,\n    amount,\n    isIncluded,\n    altAmount,\n    isAlternativePossible,\n    isAlternativeSelected\n  } = data;\n\n  return (\n    <div className=\"eili\">\n      <Switch\n        size=\"small\"\n        checkedChildren={<CheckOutlined />}\n        unCheckedChildren={<CloseOutlined />}\n        defaultChecked={isIncluded}\n        onChange={(value) => onIncludeChange(id, value)}\n      />\n      <div className=\"eili-description-part\">\n        <Typography.Text className=\"oili-description\">\n          {description}\n        </Typography.Text>\n        <Typography.Text className=\"eili-date\" type=\"secondary\">\n          {date}\n        </Typography.Text>\n      </div>\n      <div className=\"eili-amount-part\">\n        <Typography.Text\n          className={`${\n            !isAlternativeSelected\n              ? \"eili-amount-selected\"\n              : \"eili-amount-unselected\"\n          }\n         eili-amount`}\n          onClick={() => onSelectedAmountClick(id, 0)}\n        >\n          {amount} Kč\n        </Typography.Text>\n        {isAlternativePossible && (\n          <Typography.Text\n            className={`${\n              isAlternativeSelected\n                ? \"eili-amount-selected\"\n                : \"eili-amount-unselected\"\n            }\n         eili-amount`}\n            onClick={() => onSelectedAmountClick(id, 1)}\n          >\n            {altAmount} Kč\n          </Typography.Text>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {\n  ADD_INCOME,\n  EDIT_INCOME,\n  CHANGE_IS_INCLUDED,\n  CHANGE_IS_ALTERNATIVE,\n  REMOVE_INCOME,\n  ADD_EXPENSE,\n  EDIT_EXPENSE,\n  REMOVE_EXPENSE,\n  UPDATE_INITIAL_ACCOUNT_BALANCE,\n  UPDATE_CURRENT_ACCOUNT_BALANCE\n} from \"../constants/actionTypes\";\n\nexport function addIncome(payload) {\n  return { type: ADD_INCOME, payload };\n}\n\nexport function editIncome(payload) {\n  return { type: EDIT_INCOME, payload };\n}\n\nexport function changeInclude(payload) {\n  return { type: CHANGE_IS_INCLUDED, payload };\n}\n\nexport function changeSelectedAmount(payload) {\n  return { type: CHANGE_IS_ALTERNATIVE, payload };\n}\n\nexport function removeIncome(payload) {\n  return { type: REMOVE_INCOME, payload };\n}\n\nexport function addExpense(payload) {\n  return { type: ADD_EXPENSE, payload };\n}\n\nexport function editExpense(payload) {\n  return { type: EDIT_EXPENSE, payload };\n}\n\nexport function removeExpense(payload) {\n  return { type: REMOVE_EXPENSE, payload };\n}\n\nexport function updateInitialAccountBalance(payload) {\n  return { type: UPDATE_INITIAL_ACCOUNT_BALANCE, payload };\n}\n\nexport function updateCurrentAccountBalance(payload) {\n  return { type: UPDATE_CURRENT_ACCOUNT_BALANCE, payload };\n}\n","import moment from \"moment\";\n\nconst dateFormat = \"DD.MM.YYYY\";\n\nexport function sortByDate(array, ascending = true) {\n  return array.sort((a, b) => {\n    return (\n      moment(ascending ? a.date : b.date, dateFormat).toDate() -\n      moment(ascending ? b.date : a.date, dateFormat).toDate()\n    );\n  });\n}\n","import React from \"react\";\nimport { Typography, Card, List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport IncomeListItem from \"./IncomeListItem\";\nimport { changeInclude, changeSelectedAmount } from \"../actions\";\nimport { INCOME } from \"../constants\";\nimport { sortByDate } from \"../utils/sort\";\n\nconst IncomeList = ({ data, changeInclude, changeSelectedAmount }) => {\n  const renderItem = (item) => (\n    <IncomeListItem\n      data={item}\n      onIncludeChange={changeInclude}\n      onSelectedAmountClick={changeSelectedAmount}\n    />\n  );\n\n  return (\n    <div className=\"ei-list income-list\">\n      <Typography.Title level={3}>Příjmy</Typography.Title>\n      <Card>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sortByDate(data, false)}\n          renderItem={renderItem}\n        />\n      </Card>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.incomeData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInclude: (id, value) =>\n      dispatch(changeInclude({ id, value, type: INCOME })),\n    changeSelectedAmount: (id, value) =>\n      dispatch(changeSelectedAmount({ id, value }))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IncomeList);\n","import React from \"react\";\nimport { Typography, Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nexport default function ExpenseListItem({ data, onIncludeChange }) {\n  const { id, description, date, amount, isIncluded } = data;\n\n  return (\n    <div className=\"eili\">\n      <div className=\"eili-description-part\">\n        <Typography.Text className=\"eili-description\">\n          {description}\n        </Typography.Text>\n        <Typography.Text className=\"eili-date\" type=\"secondary\">\n          {date}\n        </Typography.Text>\n      </div>\n      <div className=\"eili-amount-part\">\n        <Typography.Text strong>{amount} Kč</Typography.Text>\n        <Switch\n          className=\"expense-switch\"\n          size=\"small\"\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          defaultChecked={isIncluded}\n          onChange={(value) => onIncludeChange(id, value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography, Card, List } from \"antd\";\nimport ExpenseListItem from \"./ExpenseListItem\";\nimport { changeInclude } from \"../actions\";\nimport { EXPENSE } from \"../constants\";\nimport { sortByDate } from \"../utils/sort\";\n\nconst ExpenseList = ({ data, changeInclude }) => {\n  const renderItem = (item) => (\n    <ExpenseListItem data={item} onIncludeChange={changeInclude} />\n  );\n\n  return (\n    <div className=\"ei-list expense-list\">\n      <Typography.Title level={3}>Výdaje</Typography.Title>\n      <Card>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sortByDate(data, true)}\n          renderItem={renderItem}\n        />\n      </Card>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.expenseData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInclude: (id, value) =>\n      dispatch(changeInclude({ id, value, type: EXPENSE }))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, InputNumber, Row, Col, PageHeader, Button } from \"antd\";\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\nimport BalanceInfo from \"./components/BalanceInfo\";\nimport IncomeList from \"./components/IncomeList\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport { updateInitialAccountBalance } from \"./actions\";\n\nconst App = ({\n  initialAccountBalance,\n  currentAccountBalance,\n  updateInitialAccountBalance\n}) => {\n  const showModal = () => {\n    Modal.confirm({\n      title: \"Zadej počáteční stav\",\n      icon: <DollarCircleOutlined />,\n      content: (\n        <div>\n          <InputNumber\n            defaultValue={initialAccountBalance}\n            onChange={(value) => updateInitialAccountBalance(value)}\n            max={1000000}\n          />\n        </div>\n      )\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <PageHeader ghost={false}>\n        <Row>\n          <Col span={11}>\n            <BalanceInfo\n              value={initialAccountBalance.toFixed(2)}\n              title=\"Počáteční stav\"\n            />\n          </Col>\n          <Col span={11}>\n            <BalanceInfo\n              value={currentAccountBalance.toFixed(2)}\n              title=\"Vypočítaný stav\"\n            />\n          </Col>\n          <Col span={1} offset={1}>\n            <Button\n              size=\"large\"\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<DollarCircleOutlined />}\n              onClick={showModal}\n            />\n          </Col>\n        </Row>\n      </PageHeader>\n      <Row>\n        <Col span={12}>\n          <ExpenseList />\n        </Col>\n        <Col span={12}>\n          <IncomeList />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    initialAccountBalance: state.initialAccountBalance,\n    currentAccountBalance: state.currentAccountBalance\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateInitialAccountBalance: (value) =>\n      dispatch(updateInitialAccountBalance(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport App from \"./App\";\n\nimport \"antd/dist/antd.css\";\nimport \"./assets/css/index.css\";\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}