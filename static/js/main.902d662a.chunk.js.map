{"version":3,"sources":["constants/actionTypes.js","constants/index.js","reducers/index.js","store/index.js","components/BalanceInfo.js","components/IncomeListItem.js","actions/index.js","utils/sort.js","components/IncomeList.js","components/ExpenseListItem.js","components/ExpenseList.js","App.js","index.js"],"names":["ADD_INCOME","EDIT_INCOME","CHANGE_IS_INCLUDED","CHANGE_IS_ALTERNATIVE","REMOVE_INCOME","ADD_EXPENSE","EDIT_EXPENSE","REMOVE_EXPENSE","UPDATE_INITIAL_ACCOUNT_BALANCE","UPDATE_CURRENT_ACCOUNT_BALANCE","INCOME","initialState","initialAccountBalance","currentAccountBalance","incomeData","id","description","date","isIncluded","amount","altAmount","isAlternativePossible","isAlternativeSelected","expenseData","calculateTotalIncome","array","total","forEach","item","calculateTotalExpense","calculateCurrentBalance","initialBalance","income","outcome","reducer","state","action","type","concat","payload","filter","expense","data","inclIdx","findIndex","newInclArray","value","outcomeData","altIdx","newAltArray","store","createStore","rootReducer","BalanceInfo","title","className","Title","level","Text","IncomeListItem","onIncludeChange","onSelectedAmountClick","size","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChange","onClick","changeInclude","dateFormat","sortByDate","ascending","sort","a","b","moment","toDate","connect","dispatch","changeSelectedAmount","itemLayout","dataSource","renderItem","ExpenseListItem","strong","updateInitialAccountBalance","ghost","span","toFixed","offset","shape","icon","DollarCircleOutlined","Modal","confirm","content","defaultValue","max","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.902d662a.chunk.js","sourcesContent":["export const ADD_INCOME = \"ADD_INCOME\";\nexport const EDIT_INCOME = \"EDIT_INCOME\";\nexport const CHANGE_IS_INCLUDED = \"CHANGE_IS_INCLUDED\";\nexport const CHANGE_IS_ALTERNATIVE = \"CHANGE_IS_ALTERNATIVE\";\nexport const REMOVE_INCOME = \"REMOVE_INCOME\";\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const EDIT_EXPENSE = \"EDIT_EXPENSE\";\nexport const REMOVE_EXPENSE = \"REMOVE_EXPENSE\";\nexport const UPDATE_INITIAL_ACCOUNT_BALANCE = \"EDIT_INITIAL_ACCOUNT_BALANCE\";\nexport const UPDATE_CURRENT_ACCOUNT_BALANCE = \"UPDATE_CURRENT_ACCOUNT_BALANCE\";\n","export const INCOME = \"INCOME\";\nexport const EXPENSE = \"EXPENSE\";\n","import {\n  ADD_INCOME,\n  EDIT_INCOME,\n  CHANGE_IS_INCLUDED,\n  CHANGE_IS_ALTERNATIVE,\n  REMOVE_INCOME,\n  ADD_EXPENSE,\n  EDIT_EXPENSE,\n  REMOVE_EXPENSE,\n  UPDATE_INITIAL_ACCOUNT_BALANCE,\n  UPDATE_CURRENT_ACCOUNT_BALANCE,\n} from \"../constants/actionTypes\";\nimport { INCOME } from \"../constants\";\n\nconst initialState = {\n  initialAccountBalance: 0,\n  currentAccountBalance: 0,\n  incomeData: [\n    {\n      id: 1,\n      description: \"Milodar z nebes üòá\",\n      date: \"11.11.2020\",\n      isIncluded: false,\n      amount: 11500,\n      altAmount: 9600,\n      isAlternativePossible: true,\n      isAlternativeSelected: true,\n    },\n    {\n      id: 2,\n      description: \"Implementace webov√Ωch str√°nek üï∏\",\n      date: \"12.11.2020\",\n      isIncluded: false,\n      amount: 28800,\n      altAmount: 12000,\n      isAlternativePossible: true,\n      isAlternativeSelected: true,\n    },\n    {\n      id: 3,\n      description: \"Vyp≈Øjƒçen√≠ penƒõz z banky (s maskou) üò∑\",\n      date: \"11.11.2020\",\n      isIncluded: false,\n      amount: 100000,\n      altAmount: 0,\n      isAlternativePossible: true,\n      isAlternativeSelected: true,\n    },\n    {\n      id: 4,\n      description: \"Prodej 1000 gumov√Ωch kachniƒçek ü¶Ü\",\n      date: \"13.11.2020\",\n      isIncluded: false,\n      amount: 4000,\n      altAmount: 0,\n      isAlternativePossible: false,\n      isAlternativeSelected: false,\n    },\n  ],\n  expenseData: [\n    {\n      id: 1,\n      description: \"Kokain üßÇ\",\n      date: \"13.09.2020\",\n      isIncluded: false,\n      amount: 4500,\n    },\n    {\n      id: 2,\n      description: \"Bober ü¶¶\",\n      date: \"05.10.2020\",\n      isIncluded: false,\n      amount: 15280,\n    },\n    {\n      id: 3,\n      description: \"N√°jem üèö\",\n      date: \"20.11.2020\",\n      isIncluded: false,\n      amount: 9200,\n    },\n    {\n      id: 4,\n      description: \"Odmƒõna pro m√©nƒõ vyvinut√© üç≠\",\n      date: \"01.06.2020\",\n      isIncluded: false,\n      amount: 349.9,\n    },\n  ],\n};\n\nfunction calculateTotalIncome(array) {\n  let total = 0;\n  array.forEach((item) => {\n    if (item.isIncluded) {\n      total += item.isAlternativeSelected ? item.altAmount : item.amount;\n    }\n  });\n  return total;\n}\n\nfunction calculateTotalExpense(array) {\n  let total = 0;\n  array.forEach((item) => {\n    total += item.isIncluded ? item.amount : 0;\n  });\n  return total;\n}\n\nfunction calculateCurrentBalance(initialBalance, income, outcome) {\n  return initialBalance + income - outcome;\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_INCOME:\n      return {\n        ...state,\n        incomeData: state.incomeData.concat(action.payload),\n      };\n    case EDIT_INCOME:\n      return {\n        ...state,\n        incomeData: state.incomeData.concat(action.payload),\n      };\n    case REMOVE_INCOME:\n      return {\n        ...state,\n        incomeData: state.incomeData.filter(\n          (income) => income.id !== action.payload\n        ),\n      };\n    case ADD_EXPENSE:\n      return {\n        ...state,\n        expenseData: state.expenseData.concat(action.payload),\n      };\n    case EDIT_EXPENSE:\n      return {\n        ...state,\n        expenseData: state.expenseData.concat(action.payload),\n      };\n    case REMOVE_EXPENSE:\n      return {\n        ...state,\n        expenseData: state.expenseData.filter(\n          (expense) => expense.id !== action.payload\n        ),\n      };\n    case CHANGE_IS_INCLUDED:\n      const data =\n        action.payload.type === INCOME ? state.incomeData : state.expenseData;\n      const inclIdx = data.findIndex((item) => item.id === action.payload.id);\n      const newInclArray = [...data];\n      newInclArray[inclIdx].isIncluded = action.payload.value;\n      if (action.payload.type === INCOME) {\n        return {\n          ...state,\n          incomeData: newInclArray,\n          currentAccountBalance: calculateCurrentBalance(\n            state.initialAccountBalance,\n            calculateTotalIncome(newInclArray),\n            calculateTotalExpense(state.expenseData)\n          ),\n        };\n      }\n      return {\n        ...state,\n        outcomeData: newInclArray,\n        currentAccountBalance: calculateCurrentBalance(\n          state.initialAccountBalance,\n          calculateTotalIncome(state.incomeData),\n          calculateTotalExpense(newInclArray)\n        ),\n      };\n    case CHANGE_IS_ALTERNATIVE:\n      const altIdx = state.incomeData.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      const newAltArray = [...state.incomeData];\n      newAltArray[altIdx].isAlternativeSelected = action.payload.value !== 0;\n      return {\n        ...state,\n        incomeData: newAltArray,\n        currentAccountBalance: calculateCurrentBalance(\n          state.initialAccountBalance,\n          calculateTotalIncome(newAltArray),\n          calculateTotalExpense(state.expenseData)\n        ),\n      };\n    case UPDATE_INITIAL_ACCOUNT_BALANCE:\n      return {\n        ...state,\n        initialAccountBalance: action.payload,\n        currentAccountBalance: calculateCurrentBalance(\n          action.payload,\n          calculateTotalIncome(state.incomeData),\n          calculateTotalExpense(state.expenseData)\n        ),\n      };\n    case UPDATE_CURRENT_ACCOUNT_BALANCE:\n      return {\n        ...state,\n        currentAccountBalance: calculateCurrentBalance(\n          state.currentAccountBalance,\n          calculateTotalIncome(state.incomeData),\n          calculateTotalExpense(state.expenseData)\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nexport default function BalanceInfo({ value, title }) {\n  return (\n    <div className=\"balance-info-container\">\n      <Typography.Title level={2}>{value} Kƒç</Typography.Title>\n      <Typography.Text className=\"balance-info-description\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Typography, Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nexport default function IncomeListItem({\n  data,\n  onIncludeChange,\n  onSelectedAmountClick\n}) {\n  const {\n    id,\n    description,\n    date,\n    amount,\n    isIncluded,\n    altAmount,\n    isAlternativePossible,\n    isAlternativeSelected\n  } = data;\n\n  return (\n    <div className=\"eili\">\n      <Switch\n        size=\"small\"\n        checkedChildren={<CheckOutlined />}\n        unCheckedChildren={<CloseOutlined />}\n        defaultChecked={isIncluded}\n        onChange={(value) => onIncludeChange(id, value)}\n      />\n      <div className=\"eili-description-part\">\n        <Typography.Text className=\"oili-description\">\n          {description}\n        </Typography.Text>\n        <Typography.Text className=\"eili-date\" type=\"secondary\">\n          {date}\n        </Typography.Text>\n      </div>\n      <div className=\"eili-amount-part\">\n        <Typography.Text\n          className={`${\n            !isAlternativeSelected\n              ? \"eili-amount-selected\"\n              : \"eili-amount-unselected\"\n          }\n         eili-amount`}\n          onClick={() => onSelectedAmountClick(id, 0)}\n        >\n          {amount} Kƒç\n        </Typography.Text>\n        {isAlternativePossible && (\n          <Typography.Text\n            className={`${\n              isAlternativeSelected\n                ? \"eili-amount-selected\"\n                : \"eili-amount-unselected\"\n            }\n         eili-amount`}\n            onClick={() => onSelectedAmountClick(id, 1)}\n          >\n            {altAmount} Kƒç\n          </Typography.Text>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {\n  ADD_INCOME,\n  EDIT_INCOME,\n  CHANGE_IS_INCLUDED,\n  CHANGE_IS_ALTERNATIVE,\n  REMOVE_INCOME,\n  ADD_EXPENSE,\n  EDIT_EXPENSE,\n  REMOVE_EXPENSE,\n  UPDATE_INITIAL_ACCOUNT_BALANCE,\n  UPDATE_CURRENT_ACCOUNT_BALANCE\n} from \"../constants/actionTypes\";\n\nexport function addIncome(payload) {\n  return { type: ADD_INCOME, payload };\n}\n\nexport function editIncome(payload) {\n  return { type: EDIT_INCOME, payload };\n}\n\nexport function changeInclude(payload) {\n  return { type: CHANGE_IS_INCLUDED, payload };\n}\n\nexport function changeSelectedAmount(payload) {\n  return { type: CHANGE_IS_ALTERNATIVE, payload };\n}\n\nexport function removeIncome(payload) {\n  return { type: REMOVE_INCOME, payload };\n}\n\nexport function addExpense(payload) {\n  return { type: ADD_EXPENSE, payload };\n}\n\nexport function editExpense(payload) {\n  return { type: EDIT_EXPENSE, payload };\n}\n\nexport function removeExpense(payload) {\n  return { type: REMOVE_EXPENSE, payload };\n}\n\nexport function updateInitialAccountBalance(payload) {\n  return { type: UPDATE_INITIAL_ACCOUNT_BALANCE, payload };\n}\n\nexport function updateCurrentAccountBalance(payload) {\n  return { type: UPDATE_CURRENT_ACCOUNT_BALANCE, payload };\n}\n","import moment from \"moment\";\n\nconst dateFormat = \"DD.MM.YYYY\";\n\nexport function sortByDate(array, ascending = true) {\n  return array.sort((a, b) => {\n    return (\n      moment(ascending ? a.date : b.date, dateFormat).toDate() -\n      moment(ascending ? b.date : a.date, dateFormat).toDate()\n    );\n  });\n}\n","import React from \"react\";\nimport { Typography, Card, List } from \"antd\";\nimport { connect } from \"react-redux\";\nimport IncomeListItem from \"./IncomeListItem\";\nimport { changeInclude, changeSelectedAmount } from \"../actions\";\nimport { INCOME } from \"../constants\";\nimport { sortByDate } from \"../utils/sort\";\n\nconst IncomeList = ({ data, changeInclude, changeSelectedAmount }) => {\n  const renderItem = (item) => (\n    <IncomeListItem\n      data={item}\n      onIncludeChange={changeInclude}\n      onSelectedAmountClick={changeSelectedAmount}\n    />\n  );\n\n  return (\n    <div className=\"ei-list income-list\">\n      <Typography.Title level={3}>P≈ô√≠jmy</Typography.Title>\n      <Card>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sortByDate(data, false)}\n          renderItem={renderItem}\n        />\n      </Card>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.incomeData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInclude: (id, value) =>\n      dispatch(changeInclude({ id, value, type: INCOME })),\n    changeSelectedAmount: (id, value) =>\n      dispatch(changeSelectedAmount({ id, value }))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IncomeList);\n","import React from \"react\";\nimport { Typography, Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nexport default function ExpenseListItem({ data, onIncludeChange }) {\n  const { id, description, date, amount, isIncluded } = data;\n\n  return (\n    <div className=\"eili\">\n      <div className=\"eili-description-part\">\n        <Typography.Text className=\"eili-description\">\n          {description}\n        </Typography.Text>\n        <Typography.Text className=\"eili-date\" type=\"secondary\">\n          {date}\n        </Typography.Text>\n      </div>\n      <div className=\"eili-amount-part\">\n        <Typography.Text strong>{amount} Kƒç</Typography.Text>\n        <Switch\n          className=\"expense-switch\"\n          size=\"small\"\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          defaultChecked={isIncluded}\n          onChange={(value) => onIncludeChange(id, value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography, Card, List } from \"antd\";\nimport ExpenseListItem from \"./ExpenseListItem\";\nimport { changeInclude } from \"../actions\";\nimport { EXPENSE } from \"../constants\";\nimport { sortByDate } from \"../utils/sort\";\n\nconst ExpenseList = ({ data, changeInclude }) => {\n  const renderItem = (item) => (\n    <ExpenseListItem data={item} onIncludeChange={changeInclude} />\n  );\n\n  return (\n    <div className=\"ei-list expense-list\">\n      <Typography.Title level={3}>V√Ωdaje</Typography.Title>\n      <Card>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sortByDate(data, true)}\n          renderItem={renderItem}\n        />\n      </Card>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.expenseData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInclude: (id, value) =>\n      dispatch(changeInclude({ id, value, type: EXPENSE }))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, InputNumber, Row, Col, PageHeader, Button } from \"antd\";\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\nimport BalanceInfo from \"./components/BalanceInfo\";\nimport IncomeList from \"./components/IncomeList\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport { updateInitialAccountBalance } from \"./actions\";\n\nconst App = ({\n  initialAccountBalance,\n  currentAccountBalance,\n  updateInitialAccountBalance\n}) => {\n  const showModal = () => {\n    Modal.confirm({\n      title: \"Zadej poƒç√°teƒçn√≠ stav\",\n      icon: <DollarCircleOutlined />,\n      content: (\n        <div>\n          <InputNumber\n            defaultValue={initialAccountBalance}\n            onChange={(value) => updateInitialAccountBalance(value)}\n            max={1000000}\n          />\n        </div>\n      )\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <PageHeader ghost={false}>\n        <Row>\n          <Col span={11}>\n            <BalanceInfo\n              value={initialAccountBalance.toFixed(2)}\n              title=\"Poƒç√°teƒçn√≠ stav\"\n            />\n          </Col>\n          <Col span={11}>\n            <BalanceInfo\n              value={currentAccountBalance.toFixed(2)}\n              title=\"Vypoƒç√≠tan√Ω stav\"\n            />\n          </Col>\n          <Col span={1} offset={1}>\n            <Button\n              size=\"large\"\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<DollarCircleOutlined />}\n              onClick={showModal}\n            />\n          </Col>\n        </Row>\n      </PageHeader>\n      <Row>\n        <Col span={12}>\n          <ExpenseList />\n        </Col>\n        <Col span={12}>\n          <IncomeList />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    initialAccountBalance: state.initialAccountBalance,\n    currentAccountBalance: state.currentAccountBalance\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateInitialAccountBalance: (value) =>\n      dispatch(updateInitialAccountBalance(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport App from \"./App\";\n\nimport \"antd/dist/antd.css\";\nimport \"./assets/css/index.css\";\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}